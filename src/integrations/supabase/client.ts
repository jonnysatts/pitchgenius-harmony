
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://nryafptwknnftdjugoyn.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5yeWFmcHR3a25uZnRkanVnb3luIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDA4MjA5MjksImV4cCI6MjA1NjM5NjkyOX0.6ixFQDUWcBw7Z3LQW6-uehPCza286BV9HDmHnNrM_vw";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Test the connection to Supabase and check if we can access the secrets
export const testSupabaseConnection = async () => {
  try {
    console.log('Testing Supabase connection and secret access...');
    
    const { data, error } = await supabase.functions.invoke('test-connection', {
      body: { test: true }
    });
    
    if (error) {
      console.error('Error testing Supabase connection:', error);
      return { 
        success: false, 
        error,
        message: `Failed to connect to Supabase: ${error.message}` 
      };
    }
    
    console.log('Supabase connection test result:', data);
    
    // Check specifically for ANTHROPIC_API_KEY
    const anthropicKeyExists = data?.environmentChecks?.ANTHROPIC_API_KEY?.exists;
    
    return { 
      success: true, 
      data,
      allKeysFound: data?.allKeysFound,
      keysStatus: data?.environmentChecks,
      anthropicKeyExists,
      message: anthropicKeyExists 
        ? "Successfully connected to Supabase and verified access to ANTHROPIC_API_KEY"
        : "Connected to Supabase but ANTHROPIC_API_KEY was not found in secrets"
    };
  } catch (error) {
    console.error('Exception testing Supabase connection:', error);
    return { 
      success: false, 
      error,
      message: `Exception during Supabase connection test: ${error.message}` 
    };
  }
};
